"x2020040"+i <- read_csv("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0"+i+"-2020.csv")
"x2020040"+str(i) <- read_csv("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0"+str(i)+"-2020.csv")
"x2020040"+str(i) <- read_csv(c("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
c(x2020040",str(i)) <- read_csv(c("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
}
plot(x20200401$Lat,x20200401$Long_)
for (i in 1:9) {
c(x2020040",str(i)) <- read_csv(c("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
}
c("x2020040",str(i)) <- read_csv(c("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
c("i","s")
("i" + "s")
"i" + "s"
paste("x2020040",str(i)) <- read_csv(paste("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
paste("i","s")
paste("i","s",sep ="")
paste0("x2020040",str(i),sep="") <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
for (i in 1:9) {
print(i)
}
paste0("x2020040",i) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",i,"-2020.csv"))
for (i in 1:4) {
paste0("x2020040",i) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",i,"-2020.csv"))
}
paste0("x2020040",str(i)) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",str(i),"-2020.csv"))
plot(x20200401$Long_,x20200401$Lat)
paste0("x2020040",toString(i)) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
paste0("x2020040",toString(1))
paste0("x2020040",str(1))
paste0("x2020040",toString(1))
paste0("x2020040",toString(i)) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
for (i in 1:4) {
paste0("x2020040",toString(i)) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
}
paste0("x2020040",toString(i)) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
assign(paste0("x2020040",toString(i))) <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
}
for (i in 1:4) {
}
plot(x20200401$Long_,x20200401$Lat)
for (i in 1:4) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
}
{}
}
for (i in 1:4) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
}
x <- read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
for (i in 1:3) {
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv"))
}
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
}
View(x20200401)
View(x20200402)
View(x20200403)
View(x20200402)
View(x20200403)
View(x20200402)
View(x20200401)
%>% mutate(date = paste0("04-0",tostring(i)))
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
%>% mutate(date = paste0("04-0",tostring(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
%>% mutate("date" = paste0("04-0",tostring(i)))
}
View(x20200401)
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
%>% mutate(date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
%>% mutate(date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
%>% mutate(date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(date = paste0("04-0",toString(i)))
}
mutate(assign(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i)))
}
plot(x20200401$Long_,x20200401$Lat)
paste("i","s",sep ="")
for (i in 1:3) {
mutate(assign(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i)))
}
plot(x20200401$Long_,x20200401$Lat)
paste("i","s",sep ="")
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(assign(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(assign(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i)))
}
mutate(as.data.frame((paste0("x2020040",toString(i))),date = paste0("04-0",toString(i)))
}
plot(x20200401$Long_,x20200401$Lat)
paste("i","s",sep ="")
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(as.data.frame((paste0("x2020040",toString(i))),date = paste0("04-0",toString(i)))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i)))
}
View(x20200401)
mutate(x20200401,date = 04-01)
y <- mutate(x20200401,date = 04-01)
View(y)
y <- mutate(x20200401,date = 04-01-2020)
y <- mutate(x20200401,date = "04-01-2020")
assign(paste0("x2020040",toString(i)),mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
View(x20200401)
View(x20200401)
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i+i)),mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
View(x20200402)
View(x20200404)
View(x20200406)
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(df(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(as.data.frame.AsIs(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
assign(paste0("x2020040",toString(i)),mutate(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
assign(paste0("x2020040",toString(i)),mutate(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i))))
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(paste0("x2020040",toString(i)),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(as.data.frame(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0(),("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0(),("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")))
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0,("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")));
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")));
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0,("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
for (i in 1:3) {
assign(paste0("x2020040",toString(i)),read_csv(paste0("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/04-0",toString(i),"-2020.csv")));
assign(paste0("x2020040",toString(i)),mutate(do.call(paste0,list("x2020040",toString(i))),date = paste0("04-0",toString(i))))
}
temp = list.files(path = "COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/",pattern="*.csv")
print(temp)
myfiles = lapply(temp,read_csv)
myfiles = lapply(temp,read_csv(default_locale(temp))
setwd("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
myfiles = lapply(temp,read_csv)
View(myfiles)
head(myfiles)
summary(myfiles)
glimpse(myfiles)
myfiles2 = lapply(myfiles,rbind)
View(myfiles2)
View(myfiles2)
View(myfiles)
View(myfiles2)
as.data.frame(myfiles2)
y <- as.data.frame(myfiles2)
View(y)
View(y)
temp_list = list.files(path = "COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/",pattern="*.csv")
setwd("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
dataframes = lapply(temp_list,read_csv)
getwd()
temp_list = list.files(pattern="*.csv")
dataframes = lapply(temp_list,read_csv)
View(x20200402)
y <- bind_rows(dataframes)
View(x20200404)
View(x20200401)
dataframes_clean = lapply(dataframes$Last_Update,as_date)
dataframes_clean = lapply(dataframes,as_date)
for (i in dataframes) {
as_date(dataframes[i]$LastUpdate)
}
View(i)
dataframes_clean = lapply(dataframes$LastUpdate,as_date)
dataframes_clean = lapply(dataframes,mutate(hello = "hi"))
dataframes_clean = lapply(dataframes,mutate(dataframes,hello = "hi"))
dataframes_clean = apply(dataframes,as_date)
dataframes_clean = apply(dataframes$LastUpdate,2,as_date)
dataframes_clean = apply(dataframes,2,as_date)
dataframes_clean = sapply(dataframes,as_date)
dataframes_clean = sapply(dataframes$LastUpdate,as_date)
dataframes_clean = sapply(dataframes$LastUpdate,as_date)
dataframes_clean = sapply(dataframes,as_date)
dataframes = sapply(temp_list,read_csv)
View(dataframes)
y <- bind_rows(dataframes)
dataframes_clean = mapply(as_date,dataframes)
dataframes_clean = mapply(as_date,dataframes$`03-07-2020.csv`)
View(i)
View(dataframes_clean)
dataframes_clean = mapply(as_date,dataframes$[]$LastUpdate)
dataframes_clean = mapply(as_date,dataframes$[,]$LastUpdate)
dataframes_clean = mapply(as_date,dataframes$[,])
dataframes_clean = mapply(as_date,dataframes$)
dataframes_clean = mapply(as_date,dataframes)
dataframes_clean = mapply(as_date,dataframes[:])
dataframes_clean = mapply(as_date,dataframes[1:10])
result <- do.call(rbind,dataframes)
dataframes = lapply(temp_list,read_csv)
dataframes_clean = mapply(as_date,dataframes)
result <- do.call(rbind,dataframes)
y <- bind_rows(dataframes)
y <- bind_rows(dataframes)
dataframes_12var = subset(dataframes, len(dataframes) >= 12)
dataframes_12var = subset(dataframes, length(dataframes) >= 12)
length(dataframes)
View(dataframes)
dataframes_12var = subset(dataframes, dataframes[[]] >= 12)
View(dataframes_12var)
dataframes_12var = subset(dataframes, dataframes[] >= 12)
summary(dataframes)
dataframes_12var = subset(dataframes, length(dataframes[]) >= 12)
View(dataframes_12var)
dataframes$73
dataframes[73]
dataframes_12var = dataframes[61:73]
result <- do.call(rbind,dataframes_12var)
df_clean <- do.call(rbind,dataframes_12var)
summary(df_clean)
hist(df_clean)
hist(df_clean$Active)
hist(df_clean$Recovered)
hist(df_clean$Recovered)
hist(df_clean$Deaths)
hist(df_clean$Deaths)
hist(df_clean$Confirmed)
plot(df_clean$Last_Update,df_clean$Deaths)
View(df_clean)
df_clean <- do.call(rbind,dataframes_12var) %>%
lubridate::as_date(LastUpdate)
df <- do.call(rbind,dataframes_12var) %>%
df_clean <- as_date(df$LastUpdate)
df <- do.call(rbind,dataframes_12var)
df_clean <- as_date(df$LastUpdate)
df_clean <- as_date(df$Last_UpdateLastUpdate)
df_clean <- as_date(df$Last_Update)
View(dataframes_clean)
df <- do.call(rbind,dataframes_12var)
View(df)
View(dataframes_12var)
y <- lapply(dataframes_12var$Last_Update,as_date)
dataframes_12var
y <- bind_rows(dataframes_12var)
dataframes_12var = dataframes[62:73]
y <- bind_rows(dataframes_12var)
View(y)
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update))
df_ready <- df_clean %>% mutate("Date" = as_date(df_clean$Last_Update))
df_ready <- df_clean %>% mutate(Date = 1)
df_ready <- df_clean %>% mutate("Date" = 1)
df_ready <- df_clean %>% mutate(Date = "hi")
df_clean <- bind_rows(dataframes_12var)
View(df_clean)
df_ready <- df_clean %>% lubridate::as_date()
df_ready <- df_clean %>% mutate(Date = "hi")
View(df_ready)
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update)
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update))
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update))
View(df_ready)
summary(df_clean)
plot(df_clean$Last_Update,df_clean$Deaths)
ggplot2(df_clean$Last_Update,df_clean$Deaths)
library(ggplot2)
ggplot2(df_clean$Last_Update,df_clean$Deaths)
aes(x= df_clean$Last_Update, y = df_clean$Deaths)
ggplot2()
aes(x= df_clean$Last_Update, y = df_clean$Deaths) + geom_point()
ggplot(df_ready,aes(x= df_clean$Last_Update, y = df_clean$Deaths)) + geom_point()
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point()
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths))
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths),colors()))
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths),colors())
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, color=Country_Region))
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths),color=Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(color=Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(df_ready,color=Country_Region)
plot <- ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(df_ready,color=Country_Region)
plot + geom_point(df_ready,color=Country_Region)
plot + geom_point(color = df_ready$Country_Region)
plot <- ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths), show.legend = T) + scale_fill_distiller(Country_Region)
df_ready$
plot <- ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths), show.legend = T) + scale_fill_distiller(df_ready$Country_Region)
plot <- ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths), show.legend = T) + scale_fill_distiller(df_ready$Country_Region)
plot <- ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill='red', color='blue'), show.legend = T) + scale_fill_distiller(df_ready$Country_Region)
plot <- ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill='red', color='blue'), show.legend = T) #scale_fill_distiller(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill='red', color='blue'), show.legend = T) + scale_fill_distiller(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill='red', color='blue'), show.legend = T) + scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill='red', color='blue'), show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill=Country_region, color='blue'), show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill=Country_Region, color='blue'), show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready) + geom_point(aes(x= Last_Update, y = Deaths, fill=Country_Region), show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, fill=Country_Region) + geom_point(show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, fill=Country_Region)) + geom_point(show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, fill=Country_Region)) + geom_point(show.legend = T) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, fill=Country_Region)) + geom_point()) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, fill=Country_Region)) + geom_point() #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths, color=Country_Region)) + geom_point() #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(aes(color=Country_Region))) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(aes(color=Country_Region)) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point() + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = F) + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
fig.height = 10, fig.width = 5
fig.height = 10
fig.width = 5
{r fig.height = 10, fig.width = 5}
'''{r fig.height = 10, fig.width = 5}
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = F) + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
'''
{r fig.height = 10, fig.width = 5}
options(repr.plot.width = 14, repr.plot.height = 8)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = F) + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
options(repr.plot.width = 35, repr.plot.height = 16)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = F) + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color=Country_Region) #+ scale_alpha_continuous(df_ready$Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color=Country_Region) + theme(legend.position = "bottom")
+ legend(x = c(1,2), y= c(0,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color=Country_Region) + theme(legend.position = "bottom") + legend(x = c(1,2), y= c(0,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color=Country_Region) + theme(legend.position = "bottom") + legend(x = c(1,2), y= c(0,1),legend = Country_Region)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color=Country_Region) + theme(legend.position = "bottom", legend.key.height = 0.2, legend.key.width = 0.1)
+ guides(shape = guide_legend(override.aes = list(size = 0.5)))
+ aes(color=Country_Region) + theme(legend.position = c(0.1,0.7)) + guides(shape = guide_legend(override.aes = list(size = 0.5)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) + aes(color = Country_Region) + theme(legend.position = c(0.1,0.7))
+ aes(color = Country_Region) + theme(legend.position = c(-5,5))
options(repr.plot.width = 35, repr.plot.height = 16)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T)
+ aes(color = Country_Region) + theme(legend.position = c(-5,5))
+ guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) \
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T);
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +aes(color = Country_Region) + theme(legend.position = c(-5,5))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-5,5)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-1,5)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-1,1)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-0.5,0.5)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-0.2,0.5)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-0.2,0.8)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
windows(10,5)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(-0.2,0.8)) +
guides(shape = guide_legend(override.aes = list(size = 0.1)))
aes(color = Country_Region) + theme(legend.position = "top"
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top")
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top")
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top", legend.margin(1,1,1,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top", legend.margin = margin(1,1,1,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top", legend.margin = margin(0.1,0.1,0.1,0.1,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = "top", legend.margin = margin(100,1,1,1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(1,0), legend.key.size = 0.1)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(1,0), legend.key.size = unit(0.1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(1,0), legend.key.size = unit(0.1,"lines"))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(2,0.5), legend.key.size = unit(0.05,"lines"))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(1.5,0.3), legend.key.size = unit(0.05,"lines"))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(0.05,"lines"))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(0.01,"lines"))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.text = element_text(size = 0.5))
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm")#,
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"))#,
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"))#,
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.text = element_text(size = 1))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.3,0.8), legend.key.size = unit(1,"mm"),
legend.text = element_text(size = 2))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend. legend.text = element_text(size = 8))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.text = element_text(size = 8))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.text = element_text(size = 6))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 5))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 5))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 5),
legend.direction = "vertical" )
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.5,0.8), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 5),
legend.direction = "horizontal" )
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.4,0.6), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 4),
legend.direction = "horizontal" )
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.35,0.65), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 4.5),
legend.direction = "horizontal" )
source('~/GitHub/BMI706-Group5Project/PJH-Script.R', echo=TRUE)
temp_list = list.files(pattern="*.csv")
dataframes = lapply(temp_list,read_csv)
dataframes_12var = dataframes[62:73]
df_clean <- bind_rows(dataframes_12var)
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update))
#summary(df_clean)
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.35,0.65), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 4.5),
legend.direction = "horizontal" )
library(ggplot2)
library(tidyverse)
library(lubridate)
getwd()
setwd("COVID-19/csse_covid_19_data/csse_covid_19_daily_reports/")
temp_list = list.files(pattern="*.csv")
dataframes = lapply(temp_list,read_csv)
dataframes_12var = dataframes[62:73]
df_clean <- bind_rows(dataframes_12var)
df_ready <- df_clean %>% mutate(Date = as_date(df_clean$Last_Update))
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.35,0.65), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 4.5),
legend.direction = "horizontal" )
ggplot(df_ready,aes(x= Last_Update, y = Deaths)) + geom_point(show.legend = T) +
aes(color = Country_Region) + theme(legend.position = c(0.35,0.65), legend.key.size = unit(1,"mm"),
legend.key.width = unit(0.5,"mm"), legend.text = element_text(size = 4.5),
legend.direction = "horizontal" )
